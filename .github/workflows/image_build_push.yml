name: docker image

on:
  push:
    branches: [ master, gis-based-mode-detection, cleanup-cicd ]
  pull_request:
    branches: [ master, gis-based-mode-detection ]

# Dockerhub credentials are set as environment variables
env:
  DOCKER_USER: ${{secrets.DOCKER_USER}}
  DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}

jobs:
  dump_contexts_to_log:
    runs-on: ubuntu-latest
    steps:
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
      - name: Dump job context
        env:
          JOB_CONTEXT: ${{ toJson(job) }}
        run: echo "$JOB_CONTEXT"
      - name: Dump steps context
        env:
          STEPS_CONTEXT: ${{ toJson(steps) }}
        run: echo "$STEPS_CONTEXT"
      - name: Dump runner context
        env:
          RUNNER_CONTEXT: ${{ toJson(runner) }}
        run: echo "$RUNNER_CONTEXT"
      - name: Dump strategy context
        env:
          STRATEGY_CONTEXT: ${{ toJson(strategy) }}
        run: echo "$STRATEGY_CONTEXT"
      - name: Dump matrix context
        env:
          MATRIX_CONTEXT: ${{ toJson(matrix) }}
        run: echo "$MATRIX_CONTEXT"

  debug-info:
    runs-on: ubuntu-latest
    steps:
      - name: Print commit info
        run: |
          echo "Commit author: ${{ github.event.commits[0].author.name }}"
          echo "Commit message: ${{ github.event.head_commit.message }}"
          echo "Head commit author: ${{ github.event.head_commit.author.name }}"
          echo "Event name: ${{ github.event_name }}"
          echo "Actor: ${{ github.actor }}"

  test-with-docker:
    uses: MukuFlash03/e-mission-server/.github/workflows/test-with-docker.yml@cleanup-cicd
  
  test-with-manual-install:
    uses: MukuFlash03/e-mission-server/.github/workflows/test-with-manual-install.yml@cleanup-cicd

  build:
    runs-on: ubuntu-latest
    needs: [test-with-docker, test-with-manual-install]
    if: ${{ github.event_name == 'push' }}

    outputs:
      date: ${{ steps.date.outputs.date }}

    steps:
    - uses: actions/checkout@v2

    - name: Set docker image tags
      id: set-tags
      run: |
        set -a; source .env; set +a
        echo "SERVER_IMAGE_TAG=${SERVER_IMAGE_TAG}" >> "$GITHUB_OUTPUT"
        echo "Current server image tag (push): ${SERVER_IMAGE_TAG}"
  
    - name: docker login
      run: | # log into docker hub account
        docker login -u $DOCKER_USER -p $DOCKER_PASSWORD

    - name: Get current date # get the date of the build
      id: date
      run: echo "date=$(date +'%Y-%m-%d--%M-%S')" >> "$GITHUB_OUTPUT"

    #Runs a single command using the runners shell
    - name: Run a one-line script
      run: echo running in repo ${GITHUB_REPOSITORY#*/} branch ${GITHUB_REF##*/} on ${{ steps.date.outputs.date }}

    # Runs a set of commands using the runners shell
    - name: build docker image
      run: |
        docker build -t $DOCKER_USER/${GITHUB_REPOSITORY#*/}:${GITHUB_REF##*/}_${{ steps.date.outputs.date }} .
        docker images

    - name: push docker image
      run: |
        docker push $DOCKER_USER/${GITHUB_REPOSITORY#*/}:${GITHUB_REF##*/}_${{ steps.date.outputs.date }}

    - name: Update .env file 
      run: |
        echo "SERVER_IMAGE_TAG=${GITHUB_REF##*/}_${{ steps.date.outputs.date }}" > .env

    - name: Add, Commit, Push changes to .env file
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "Github Actions bot to update .env with latest tags"
        if git diff --quiet; then
          echo "Latest timestamp already present in .env file, no changes to commit"
        else
          git add .env
          git commit -m "Updated docker image tags in .env file to the latest timestamp"
          git push origin 
        fi

  # dispatch:
  #   needs: build
  #   runs-on: ubuntu-latest

  #   strategy:
  #     matrix:
  #       include:
  #         - repo: MukuFlash03/nrel-openpath-join-page
  #           branch: cleanup-cicd
  #         - repo: MukuFlash03/op-admin-dashboard
  #           branch: cleanup-cicd
  #         - repo: MukuFlash03/em-public-dashboard
  #           branch: cleanup-cicd
  #         # - repo: e-mission/op-admin-dashboard
  #         #   branch: master
  #         # - repo: e-mission/em-public-dashboard
  #         #   branch: main

  #   steps:
  #   - uses: actions/checkout@v4

  #   - name: Trigger workflow in admin-dash, public-dash
  #     run: |
  #       curl -L \
  #         -X POST \
  #         -H "Accept: application/vnd.github+json" \
  #         -H "Authorization: Bearer ${{ secrets.GH_FG_PAT_TAGS }}" \
  #         -H "X-GitHub-Api-Version: 2022-11-28" \
  #         https://api.github.com/repos/${{ matrix.repo }}/actions/workflows/image_build_push.yml/dispatches \
  #         -d '{"ref":"${{ matrix.branch }}"}'

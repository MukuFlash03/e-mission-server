name: Reusable Docker Image Build and Push

on:
  workflow_call:
    inputs:
      repo:
        required: true
        type: string
      branch:
        required: true
        type: string

env:
  DOCKER_USER: ${{secrets.DOCKER_USER}}
  DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          repository: ${{ inputs.repo }}
          ref: ${{ inputs.branch }}

      - name: Set docker image tags
        id: set-tags
        run: |
          ls -al
          set -a; source .env; set +a
          if [ "${{ inputs.repo }}" = "MukuFlash03/nrel-openpath-join-page" ]; then
            echo "JOIN_IMAGE_TAG=${JOIN_IMAGE_TAG}" >> "$GITHUB_OUTPUT"
            echo "Current join-page image tag (push): ${JOIN_IMAGE_TAG}"
          fi

      - name: docker login
        run: |
          docker login -u $DOCKER_USER -p $DOCKER_PASSWORD

      - name: Get current date # get the date of the build
        id: date
        run: echo "date=$(date +'%Y-%m-%d--%M-%S')" >> "$GITHUB_OUTPUT"

      - name: Run a one-line script
        run: echo running image build for repo ${{ inputs.repo }} branch ${{ inputs.branch }} on ${{ steps.date.outputs.date }}

      - name: build docker image
        run: |
          if [ "${{ inputs.repo }}" = MukuFlash03/nrel-openpath-join-page" ]; then
            docker build -t $DOCKER_USER/${{ inputs.repo }}:${{ inputs.branch }}_${{ steps.date.outputs.date }} ./frontend
          fi
          docker images
  
      - name: push docker image
        run: |
          docker push $DOCKER_USER/${{ inputs.repo }}:${{ inputs.branch }}_${{ steps.date.outputs.date }}
        
      - name: Update .env file 
        run: |
          if [ "${{ inputs.repo }}" = MukuFlash03/nrel-openpath-join-page" ]; then
            echo "JOIN_IMAGE_TAG=${{ inputs.branch }}_${{ steps.date.outputs.date }}" > .env
          # elif [ "${{ inputs.repo }}" = "MukuFlash03/op-admin-dashboard" ]; then
          #   echo "SERVER_IMAGE_TAG=${{ steps.get-server-tag.outputs.SERVER_IMAGE_TAG }}" >> .env
          #   echo "ADMIN_DASH_IMAGE_TAG=${{ inputs.branch }}_${{ steps.date.outputs.date }}" > .env
          # elif [ "${{ inputs.repo }}" = "MukuFlash03/em-public-dashboard" ]; then
          #   echo "PUBLIC_DASH_NOTEBOOK_IMAGE_TAG=${{ inputs.branch }}_${{ steps.date.outputs.date }}" > .env
          #   if [ "${{ github.event_name }}" == "workflow_call" ]; then
          #     echo "Workflow_call: Reuse existing frontend image tag"
          #     echo "PUBLIC_DASH_FRONTEND_IMAGE_TAG=${{ steps.set-tags.outputs.PUBLIC_DASH_FRONTEND_IMAGE_TAG }}" >> .env
          #   else
          #     echo "Push event: Update frontend image tag"
          #     echo "PUBLIC_DASH_FRONTEND_IMAGE_TAG=${{ inputs.branch }}_${{ steps.date.outputs.date }}" >> .env
          #   fi
          #   echo "SERVER_IMAGE_TAG=${{ steps.get-server-tag.outputs.SERVER_IMAGE_TAG }}" >> .env
          #   echo "PUBLIC_DASHBOARD_IMAGE_TAG=${{ inputs.branch }}_${{ steps.date.outputs.date }}" > .env
          fi
          cat .env


      - name: Add, Commit, Push changes to .env file
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "Github Actions bot to update .env with latest tags"
          if git diff --quiet; then
            echo "Latest timestamp already present in .env file, no changes to commit"
          else
            git add .env
            git commit -m "Updated docker image tags in .env file to the latest timestamp"
            git push origin 
          fi
          cat .env
